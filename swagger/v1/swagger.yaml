---
openapi: 3.0.3
info:
  title: ZeroKiss API
  version: v1
servers:
- url: http://localhost:3000
  description: local
paths:
  "/api/v1/auth/token":
    post:
      summary: Get JWT token
      tags:
      - Auth
      description: 'Send header `X-Passphrase: <secret>-YYYY-MM-DD`. Response body
        contains `{ token, exp }`. Click Authorize and paste only the token for subsequent
        requests.'
      security: []
      parameters:
      - name: X-Passphrase
        in: header
        schema:
          type: string
        required: true
        description: 'Format: <secret>-YYYY-MM-DD'
      responses:
        '200':
          description: OK
        '401':
          description: unauthorized
  "/api/v1/frames/{frame_id}/circles":
    post:
      summary: Circle created
      tags:
      - Circles
      security:
      - bearerAuth: []
      description: Requires JWT. Use **Authorize** (bearerAuth) and paste the token
        **without** `Bearer`.
      parameters:
      - name: frame_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: Circle created
        '404':
          description: not found
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - center_x
              - center_y
              - diameter
              properties:
                center_x:
                  type: number
                center_y:
                  type: number
                diameter:
                  type: number
  "/api/v1/circles/{id}":
    put:
      summary: Circle updated
      tags:
      - Circles
      security:
      - bearerAuth: []
      description: Requires JWT. Use **Authorize** (bearerAuth) and paste token **without**
        `Bearer`.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '404':
          description: not found
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center_x:
                  type: number
                center_y:
                  type: number
                diameter:
                  type: number
    delete:
      summary: Circle deleted
      tags:
      - Circles
      security:
      - bearerAuth: []
      description: Requires JWT. Use **Authorize** (bearerAuth) and paste token **without**
        `Bearer`.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
        '404':
          description: not found
  "/api/v1/circles":
    get:
      summary: get
      tags:
      - Circles
      security:
      - bearerAuth: []
      description: Requires JWT. Use **Authorize** (bearerAuth) and paste token **without**
        `Bearer`.
      parameters:
      - name: frame_id
        in: query
        schema:
          type: integer
      - name: center_x
        in: query
        schema:
          type: number
      - name: center_y
        in: query
        schema:
          type: number
      - name: radius
        in: query
        schema:
          type: number
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: OK
  "/api/v1/frames":
    post:
      summary: Frame created
      tags:
      - Frames
      security:
      - bearerAuth: []
      description: 'Authentication flow: 1) POST `/api/v1/auth/token` with header
        `X-Passphrase: <secret>-YYYY-MM-DD`; 2) Click **Authorize** (bearerAuth) and
        paste the token **without** the `Bearer` prefix; 3) Execute this request.'
      parameters: []
      responses:
        '201':
          description: Frame created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - center_x
              - center_y
              - width
              - height
              properties:
                center_x:
                  type: number
                center_y:
                  type: number
                width:
                  type: number
                height:
                  type: number
                circles_attributes:
                  type: array
                  items:
                    type: object
                    required:
                    - center_x
                    - center_y
                    - diameter
                    properties:
                      center_x:
                        type: number
                      center_y:
                        type: number
                      diameter:
                        type: number
  "/api/v1/frames/{id}":
    get:
      summary: OK
      tags:
      - Frames
      security:
      - bearerAuth: []
      description: 'Requires JWT. Generate at `/api/v1/auth/token` (send `X-Passphrase:
        <secret>-YYYY-MM-DD`), then click **Authorize** and paste the token **without**
        `Bearer`.'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '404':
          description: not found
    delete:
      summary: delete
      tags:
      - Frames
      security:
      - bearerAuth: []
      description: Requires JWT. Use **Authorize** (bearerAuth) and paste the token
        **without** `Bearer`.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
        '404':
          description: not found
  "/healthz":
    get:
      summary: Health check
      tags:
      - Health
      description: Liveness/Readiness probe. No authentication required.
      parameters:
      - name: Authorization
        in: header
        required: false
        schema:
          type: string
        description: Not required for this endpoint
      responses:
        '200':
          description: ok
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 'Paste only the token in the Authorize dialog. The UI will send
        `Authorization: Bearer <token>` automatically.'
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          example: not found
      required:
      - error
    Errors422:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
      - errors
      example:
        errors:
          base:
          - validation error
    Frame:
      type: object
      description: 'Frame (rectangle in cm). Rule: frames must not touch or overlap.
        If they do, API returns 422.'
      properties:
        id:
          type: integer
        center_x:
          type: number
          format: float
          example: 10.0
        center_y:
          type: number
          format: float
          example: 10.0
        width:
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
          example: 20.0
        height:
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
          example: 30.0
      required:
      - id
      - center_x
      - center_y
      - width
      - height
    FrameCreatePayload:
      type: object
      required:
      - frame
      properties:
        frame:
          type: object
          required:
          - center_x
          - center_y
          - width
          - height
          properties:
            center_x:
              type: number
              format: float
              example: 10.0
            center_y:
              type: number
              format: float
              example: 10.0
            width:
              type: number
              format: float
              minimum: 0
              exclusiveMinimum: true
              example: 20.0
            height:
              type: number
              format: float
              minimum: 0
              exclusiveMinimum: true
              example: 30.0
            circles_attributes:
              type: array
              description: Nested create in an atomic transaction.
              items:
                type: object
                required:
                - center_x
                - center_y
                - diameter
                properties:
                  center_x:
                    type: number
                    format: float
                  center_y:
                    type: number
                    format: float
                  diameter:
                    type: number
                    format: float
                    minimum: 0
                    exclusiveMinimum: true
          description: If the new frame touches or overlaps another, API returns 422.
    Circle:
      type: object
      properties:
        id:
          type: integer
        frame_id:
          type: integer
        center_x:
          type: number
          format: float
        center_y:
          type: number
          format: float
        diameter:
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
      required:
      - id
      - frame_id
      - center_x
      - center_y
      - diameter
    CircleCreatePayload:
      type: object
      required:
      - circle
      properties:
        circle:
          type: object
          required:
          - center_x
          - center_y
          - diameter
          properties:
            center_x:
              type: number
              format: float
            center_y:
              type: number
              format: float
            diameter:
              type: number
              format: float
              minimum: 0
              exclusiveMinimum: true
          description: Must fit inside the frame and must not touch or overlap other
            circles in the same frame.
    CircleUpdatePayload:
      type: object
      required:
      - circle
      properties:
        circle:
          type: object
          properties:
            center_x:
              type: number
              format: float
            center_y:
              type: number
              format: float
            diameter:
              type: number
              format: float
              minimum: 0
              exclusiveMinimum: true
          description: Same validation rules as create.
    FrameShow:
      allOf:
      - "$ref": "#/components/schemas/Frame"
      - type: object
        properties:
          circles_count:
            type: integer
          topmost_circle:
            oneOf:
            - "$ref": "#/components/schemas/Circle"
            - type: 'null'
          bottommost_circle:
            oneOf:
            - "$ref": "#/components/schemas/Circle"
            - type: 'null'
          leftmost_circle:
            oneOf:
            - "$ref": "#/components/schemas/Circle"
            - type: 'null'
          rightmost_circle:
            oneOf:
            - "$ref": "#/components/schemas/Circle"
            - type: 'null'
          circles:
            type: array
            items:
              "$ref": "#/components/schemas/Circle"
security:
- bearerAuth: []
